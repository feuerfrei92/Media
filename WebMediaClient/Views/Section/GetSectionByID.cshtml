@model WebMediaClient.Models.SectionViewModel

@{
    ViewBag.Title = "GetSectionByID";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Name</h2>

<script type="text/javascript">
	window.addEventListener("load", function () { checkMember() }, false);

	//function getToken() {
	//	if (Modernizr.localstorage) {
	//		var localProfile = window.localStorage;
	//		var token = JSON.parse(localProfile.getItem("MediaToken"));
	//		return token;
	//	}
	//}

	@*function getUsername() {
		var token = getToken();
		if (token != null) {
			$.ajax
			({
				url: '@Url.Action("GetCurrentUser", "User")',
				data: { token: token },
				dataType: 'json',
				type: 'GET',
				success: function (data) {
					var hiddenID = document.getElementById("store_id");
					hiddenID.value = data.ID;
					loadChildSections(data.ID);
					loadTopics(data.ID);
				}
			})
		}
	}*@

	@*function loadChildSections(id) {
		var link = '@Url.Action("GetSectionsByParentID", "Section", new { parentID = @Model.ID })';
		$('#sections_container').load(link);
	}

	function loadTopics(id) {
		var link = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
		$('#topics_container').load(link);
	}*@

	function checkMember() {
		var parentID = '@ViewBag.ParentID';
		if (parentID == null) {
			$.ajax
			({
				url: '@Html.Raw(Url.Action("GetMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = @Model.ID }))',
				dataType: 'json',
				type: 'GET',
				success: function (data) {
					if (data.Role == "Regular") {
						$("#apply").prop('disabled', true);
						$("#topic").prop('disabled', false);
						$("#anonymous_check").prop('disabled', true);
						var button = document.createElement("button");
						button.class = "btn btn-default";
						button.onclick = function () { changeAnonymity() };
						if (data.Anonymous)
							button.innerHTML = '@Resources.NonAnonymous';
						else {
							button.innerHTML = '@Resources.Anonymous';
						}
						$("#application_container").append(button);
					}
					if (data.Role == "Admin") {
						$("#apply").prop('disabled', true);
						$("#subsection").prop('disabled', false);
						$("#topic").prop('disabled', false);
						$("#anonymous_check").prop('disabled', true);
						var button = document.createElement("button");
						button.class = "btn btn-default";
						button.onclick = function () { changeAnonymity() };
						if (data.Anonymous)
							button.innerHTML = '@Resources.NonAnonymous';
						else {
							button.innerHTML = '@Resources.Anonymous';
						}
						$("#application_container").append(button);
						var link1 = '@Url.Action("GetPendingMembershipsForSection", "User", new { SectionID = @Model.ID })';
						var link2 = '@Html.ActionLink(Resources.SuspendUser, "SuspendUser", "Settings", new { SectionID = @Model.ID }, new { @id = "suspend_user_link" })';
						var link3 = '@Html.ActionLink(Resources.ChangePositionOfUser, "ChangePosition", "Settings", new { SectionID = @Model.ID }, new { @id = "change_position_link" })';
						var link4 = '@Html.ActionLink(Resources.UpdateSettings, "GetSettingByOwnerIDAndType", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Section.ToString() }, new { id = "section_setting" })';
						$("#pending_members_container").load(link1);
						$("#suspend_user").html(link2);
						$("#promote_user").html(link3);
						$("#update_settings").html(link4);
					}
					if (data.Role == "Mod") {
						$("#apply").prop('disabled', true);
						$("#subsection").prop('disabled', false);
						$("#topic").prop('disabled', false);
						$("#anonymous_check").prop('disabled', true);
						var button = document.createElement("button");
						button.class = "btn btn-default";
						button.onclick = function () { changeAnonymity() };
						if (data.Anonymous)
							button.innerHTML = '@Resources.NonAnonymous';
						else {
							button.innerHTML = '@Resources.Anonymous';
						}
						$("#application_container").append(button);
						var link1 = '@Html.ActionLink(Resources.SuspendUser, "SuspendUser", "Settings", new { SectionID = @Model.ID }, new { @id = "suspend_user_link" })';
						$("#suspend_user").html(link1);
					}

					$.ajax
					({
						url: '@Html.Raw(Url.Action("GetSettingByOwnerIDAndTypeRaw", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Section.ToString() }))',
						dataType: 'json',
						type: 'GET',
						success: function (result) {
							if (result.Publicity == "Everyone") {
								var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
								var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
								$("#sections_container").load(link1);
								$("#topics_container").load(link2);
							}
							if (result.Publicity == "Registered") {
								if (data.role == "Regular" || data.role == "Mod" || data.role == "Admin") {
									var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
									var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
									$("#sections_container").load(link1);
									$("#topics_container").load(link2);
								}
							}
							if (result.Publicity == "Admins") {
								if (data.role == "Mod" || data.role == "Admin") {
									var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
									var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
									$("#sections_container").load(link1);
									$("#topics_container").load(link2);
								}
							}
						}
					})
				}
			})
		}
		else
			getRoot();
	}

	function getRoot() {
		$.ajax
		({
			url: '@Url.Action("GetRoot", "Section", new { sectionID = @Model.ID})',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				checkMemberOfRoot(data.ID);
			},
		})
	}

	function checkMemberOfRoot(id) {
		var link = '@Html.Raw(Url.Action("GetMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = -1 }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.Role == "Regular") {
					$("#apply").prop('disabled', true);
					$("#topic").prop('disabled', false);
					$("#anonymous_check").prop('disabled', true);
					var button = document.createElement("button");
					button.class = "btn btn-default";
					button.onclick = function () { changeAnonymity() };
					if (data.Anonymous)
						button.innerHTML = '@Resources.NonAnonymous';
					else {
						button.innerHTML = '@Resources.Anonymous';
					}
					$("#application_container").append(button);
				}
				if (data.Role == "Admin") {
					$("#apply").prop('disabled', true);
					$("#subsection").prop('disabled', false);
					$("#topic").prop('disabled', false);
					$("#anonymous_check").prop('disabled', true);
					var button = document.createElement("button");
					button.class = "btn btn-default";
					button.onclick = function () { changeAnonymity() };
					if (data.Anonymous)
						button.innerHTML = '@Resources.NonAnonymous';
					else {
						button.innerHTML = '@Resources.Anonymous';
					}
					$("#application_container").append(button);
					var link1 = '@Url.Action("GetPendingMembershipsForSection", "User", new { SectionID = @Model.ID })';
					var link2 = '@Html.ActionLink(Resources.SuspendUser, "SuspendUser", "Settings", new { SectionID = @Model.ID }, new { @id = "suspend_user_link" })';
					var link3 = '@Html.ActionLink(Resources.ChangePositionOfUser, "ChangePosition", "Settings", new { SectionID = @Model.ID }, new { @id = "change_position_link" })';
					var link4 = '@Html.ActionLink(Resources.UpdateSettings, "GetSettingByOwnerIDAndType", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Section.ToString() }, new { id = "section_setting" })';
					$("#pending_members_container").load(link1);
					$("#suspend_user").html(link2);
					$("#promote_user").html(link3);
					$("#update_settings").html(link4);
				}
				if (data.Role == "Mod") {
					$("#apply").prop('disabled', true);
					$("#subsection").prop('disabled', false);
					$("#topic").prop('disabled', false);
					$("#anonymous_check").prop('disabled', true);
					var button = document.createElement("button");
					button.class = "btn btn-default";
					button.onclick = function () { changeAnonymity() };
					if (data.Anonymous)
						button.innerHTML = '@Resources.NonAnonymous';
					else {
						button.innerHTML = '@Resources.Anonymous';
					}
					$("#application_container").append(button);
					var link1 = '@Html.ActionLink(Resources.SuspendUser, "SuspendUser", "Settings", new { SectionID = @Model.ID }, new { @id = "suspend_user_link" })';
					$("#suspend_user").html(link1);
				}
				//checkPublicity(data.Role);
				$.ajax
					({
						url: '@Html.Raw(Url.Action("GetSettingByOwnerIDAndTypeRaw", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Section.ToString() }))',
						dataType: 'json',
						type: 'GET',
						success: function (result) {
							if (result.Publicity == "Everyone") {
								var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
								var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
								$("#sections_container").load(link1);
								$("#topics_container").load(link2);
							}
							if (result.Publicity == "Registered") {
								if (data.role == "Regular" || data.role == "Mod" || data.role == "Admin") {
									var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
									var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
									$("#sections_container").load(link1);
									$("#topics_container").load(link2);
								}
							}
							if (result.Publicity == "Admins") {
								if (data.role == "Mod" || data.role == "Admin") {
									var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
									var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
									$("#sections_container").load(link1);
									$("#topics_container").load(link2);
								}
							}
						}
					})
			}
		})
	}

	@*function checkPublicity(role) {
		$.ajax
		({
			url: '@Html.Raw(Url.Action("GetSettingByOwnerIDAndTypeRaw", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Section.ToString() }))',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.Publicity == "Everyone") {
					var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
					var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
					$("#sections_container").load(link1);
					$("#topics_container").load(link2);
				}
				if (data.Publicity == "Registered") {
					if (role == "Regular" || role == "Mod" || role == "Admin")
					{
						var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
						var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
						$("#sections_container").load(link1);
						$("#topics_container").load(link2);
					}
				}
				if (data.Publicity == "Admins") {
					if (role == "Mod" || role == "Admin")
					{
						var link1 = '@Url.Action("GetSectionsByParentID", "Section", new { sectionID = @Model.ID })';
						var link2 = '@Url.Action("GetTopicsBySectionID", "Topic", new { sectionID = @Model.ID })';
						$("#sections_container").load(link1);
						$("#topics_container").load(link2);
					}
				}
			}
		})
	}*@

	function applyForMember() {
		$.ajax
		({
			url: '@Html.Raw(Url.Action("GetMembership", "Section", new { sectionID = @Model.ID, userID = @ViewBag.User.ID }))',
			dataType: 'json',
			type: 'PUT',
			success: function (data) {
				if (data.Status != null)
					addMembership();
				else {
					alert('@Resources.AlreadyMember');
				}
			}
		})
	}

	function addMembership() {
		var anonymous = document.getElementById("anonymous_check").checked;
		var link;
		if (anonymous)
			link = '@Html.Raw(Url.Action("AddMembership", "Section", new { sectionID = @Model.ID, userID = @ViewBag.User.ID, isAnonymous = true }))';
		else
			link = '@Html.Raw(Url.Action("AddMembership", "Section", new { sectionID = @Model.ID, userID = @ViewBag.User.ID, isAnonymous = false }))';
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'POST',
			success: function (data) {
				$("#apply").prop('disabled', true);
			}
		})
	}

	function changeAnonymity() {
		$.ajax
		({
			url: '@Html.Raw(Url.Action("ChangeVisibilityOfMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = @Model.ID }))',
			dataType: 'json',
			type: 'PUT',
			success: function (data) {
			}
		})
	}

	function postTopic() {
		var link = '@Html.Raw(@Url.Action("CreateTopic", "Topic", new { sectionID = @Model.ID, authorID = @ViewBag.User.ID }))';
		//var hiddenID = document.getElementById("store_id");
		//var id = hiddenID.value;
		//link = link.replace("-1", id);
		window.location.href = link;
	}

	function postSection() {
		var link = '@Html.Raw(@Url.Action("CreateSection", "Section", new { authorID = @ViewBag.User.ID, parentID = @Model.ID }))';
		//var hiddenID = document.getElementById("store_id");
		//var id = hiddenID.value;
		//link = link.replace("-1", id);
		window.location.href = link;
	}
</script>

<div class="row">
	<div id="sections_container" class="col-md-4">
	</div>
</div>
<div class="row">
	<div id="topics_container" class="col-md-4">
	</div>
</div>
<div class="row">
	<div id="pending_members_container" class="col-md-4">
	</div>
</div>
<div class="row">
	<div class="list-group">
		<button id="subsection" class="btn btn-default" disabled="disabled" onclick="postSection()">@Resources.AddSubSection</button>
	</div>
</div>
<div class="row">
	<div class="list-group">
		<button id="topic" class="btn btn-default" disabled="disabled" onclick="postTopic()">@Resources.AddTopic</button>
	</div>
</div>
<div class="row">
	<div id="application_container" class="list-group">
		<button id="apply" class="btn btn-default" onclick="applyForMember()">@Resources.ApplyForMembership</button>
		<br />
		<input id="anonymous_check" type="checkbox" name="anonymous" value="Anonymous" />@Resources.BrowseAnonymous<br />
	</div>
</div>
<div class="row" id="view_members">
</div>
<div class="row" id="suspend_user">
</div>
<div class="row" id="promote_user">
</div>
<div class="row" id="update_settings">
</div>
	@*<div class="list-group">
		<input id="store_id" hidden="hidden" />
	</div>
</div>*@

