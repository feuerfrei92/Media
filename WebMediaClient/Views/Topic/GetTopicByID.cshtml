@model WebMediaClient.Models.TopicViewModel

@{
    ViewBag.Title = "GetTopicByID";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script type="text/javascript">
	window.addEventListener("load", function () { updateVisit() }, false);

	function getToken() {
		if (Modernizr.localstorage) {
			var localProfile = window.localStorage;
			var token = JSON.parse(localProfile.getItem("MediaToken"));
			return token;
		}
	}

	function updateVisit() {
		$.ajax
		({
			url: '@Html.Raw(@Url.Action("UpdateVisit", "User", new { userID = @ViewBag.User.ID, topicID = @Model.ID }))',
			data: { lastvisit: Date.now() },
			dataType: 'json',
			type: 'PUT',
			success: function (data) {
				getRoot();
			},
			error: function (xhr) {
				if (xhr.status == 400) {
					createVisit();
				}
			},
		})
	}

	function createVisit() {
		$.ajax
		({
			url: '@Html.Raw(@Url.Action("CreateVisit", "User", new { userID = @ViewBag.User.ID, topicID = @Model.ID }))',
			data: { lastvisit: Date.now() },
			dataType: 'json',
			type: 'POST',
			success: function (data) {
			},
		})
	}

	function getRoot() {
		$.ajax
		({
			url: '@Url.Action("GetRoot", "Section", new { sectionID = @Model.SectionID})',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				checkMember(data.ID);
			},
		})
	}

	function checkMember(id) {
		var link = '@Html.Raw(Url.Action("GetMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = -1 }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.Role == "Regular" || data.Role == "Mod" || data.Role == "Admin")
				{
					$("#add_comment").prop('disabled', false);
				}
				if(data.Role == "Admin" || data.Role == "Mod")
				{
					var div = document.getElementById("delete_button");
					var button = document.createElement("button");
					button.id = "del_button";
					button.class = "button";
					button.onclick = "deleteTopic()";
					button.innerHTML = "Delete topic";
					div.appendChild(button);
				}
				if (data.Role == "Admin")
				{
					var link1 = '@Html.ActionLink("Update topic settings", "GetSettingByOwnerIDAndType", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Topic.ToString() }, new { id = "topic_setting" })';
					$("#update_settings").html(link1);
				}
				checkPublicity(data.Role);
			}
		})
	}

	function checkPublicity(role)
	{
		$.ajax
		({
			url: '@Html.Raw(Url.Action("GetSettingByOwnerIDAndTypeRaw", "Settings", new { ownerID = @Model.ID, settingType = SettingType.Topic.ToString() }))',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.Publicity == "Everyone")
				{
					var link = '@Url.Action("GetCommentsByTopicID", "Comment", new { topicID = @Model.ID })';
					$("#comments").load(link, function () { setIDs(); });
				}
				if (data.Publicity == "Registered")
				{
					if (role == "Regular" || role == "Mod" || role == "Admin")
					{
						var link = '@Url.Action("GetCommentsByTopicID", "Comment", new { topicID = @Model.ID })';
						$("#comments").load(link, function () { setIDs(); });
					}
				}
				if (data.Publicity == "Admins")
				{
					if (role == "Mod" || role == "Admin")
					{
						var link = '@Url.Action("GetCommentsByTopicID", "Comment", new { topicID = @Model.ID })';
						$("#comments").load(link, function () { setIDs(); });
					}
				}
			}
		})
	}

	@*function getUsername() {
		var token = getToken();
		if (token != null) {
			$.ajax
			({
				url: '@Url.Action("GetCurrentUser", "User")',
				data: { token: token },
				dataType: 'json',
				type: 'GET',
				success: function (data) {
					var hiddenID = document.getElementById("store_id");
					hiddenID.value = data.ID;
				}
			})
		}
	}*@

	function addComment() {
		//var hiddenID = document.getElementById("store_id");
		//var id = hiddenID.value;
		var text = CKEDITOR.instances.comment_text.getData();
		var link = '@Html.Raw(@Url.Action("CreateComment", "Comment", new { topicID = @Model.ID, authorID = @ViewBag.User.ID }))';
		//link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			data:
				{
					text: text,
					datecreated: Date.now(),
				},
			type: 'POST',
			success: function (data) {
				var link = '@Url.Action("GetCommentsByTopicID", "Comment", new { topicID = @Model.ID })';
				$("#comments").empty();
				$('#comments').load(link, function () { setIDs(); });
			},
			error: function (xhr) {
				var link = '@Url.Action("GetCommentsByTopicID", "Comment", new { topicID = @Model.ID })';
				$("#comments").empty();
				$('#comments').load(link, function () { setIDs(); });
			}
		})
	}
</script>

<script src="~/ckeditor/ckeditor.js"></script>

<h2>@Model.Name</h2>

<div id="comments" class="form-group">
</div>

<div class="row">
	<div class="col-md-8">
		<textarea id="comment_text" class="form-control" cols="25" rows="5"></textarea>
	</div>
</div>
<div class="row">
	<div class="col-md-8">
		<button id="add_comment" class="btn btn-default" disabled="disabled" onclick="addComment()">Reply</button>
	</div>
</div>
<div class="row">
	<div id="delete_button" class="col-md-8">
	</div>
</div>
<div class="row" id="update_settings">
</div>
<script>
	CKEDITOR.replace("comment_text");
</script>

