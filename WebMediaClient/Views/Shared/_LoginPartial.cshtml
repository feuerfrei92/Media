<script type="text/javascript">
	window.addEventListener("load", function () { $('.dropdown-toggle').dropdown(); }, false);

	function setUser(id, username, token) {
		$.ajax
		({
			url: '@Url.Action("SetUser", "Home")',
			data: { id: id, username: username, token: token },
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				var actionsList = document.getElementById("actions_list");
				var manageNode = document.createElement("li");
				manageNode.setAttribute("id", "manage_profile");
				manageNode.setAttribute("class", "dropdown");
				var actionLinkElement = document.createElement("label");
				actionLinkElement.setAttribute("class", "label-default dropdown-toggle");
				actionLinkElement.setAttribute("data-toggle", "dropdown");
				var manageElem = '@Resources.Hello' + data.Username;
				actionLinkElement.innerHTML = manageElem;
				manageNode.appendChild(actionLinkElement);
				actionsList.appendChild(manageNode);
				populateDropdownMenu();
				populateLogOffNode();
			}
		})
	}

	@*function populateDropdownMenu() {
		var manageNode = document.getElementById("manage_profile");
		var dropdownMenu = document.createElement("ul");
		dropdownMenu.setAttribute("class", "dropdown-menu");
		var updateProfile = document.createElement("li");
		var updateProfileLink = document.createElement("a");
		var updateElem = '@Html.ActionLink("Update profile", "UpdateProfile", "Profile", routeValues: null, htmlAttributes: new { id = "update_profile_link" })';
		updateProfileLink.innerHTML = updateElem;
		updateProfile.appendChild(updateProfileLink);
		var manageProfile = document.createElement("li");
		var manageProfileLink = document.createElement("a");
		var manageElem = '@Html.ActionLink("Update settings", "Index", "Settings", routeValues: null, htmlAttributes: new { id = "setting_link" })';
		manageProfileLink.innerHTML = manageElem;
		manageProfile.appendChild(manageProfileLink);
		dropdownMenu.appendChild(updateProfile);
		dropdownMenu.appendChild(manageProfile);
		manageNode.appendChild(dropdownMenu);
	}

	function populateLogOffNode() {
		var actionsList = document.getElementById("actions_list");
		var logoffNode = document.createElement("li");
		var labelElement = document.createElement("a");
		labelElement.setAttribute("id", "logoff_link");
		labelElement.setAttribute("href", '@Url.Action("Index", "Home")');
		labelElement.setAttribute("onclick", "deleteToken()");
		labelElement.text = "Log off";
		logoffNode.appendChild(labelElement);
		actionsList.appendChild(logoffNode);
		var registerLink = document.getElementById("registerLink");
		registerLink.parentNode.removeChild(registerLink);
		var loginLink = document.getElementById("loginLink");
		loginLink.parentNode.removeChild(loginLink);
	}*@
</script>
	<ul id="actions_list" class="nav navbar-nav navbar-right">
		@if((Services.Models.UserModel)HttpContext.Current.Session["currentUser"] == null)
		{ 
			<li>@Html.ActionLink(Resources.Register, "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</li>
			<li>@Html.ActionLink(Resources.Login, "Login", "Account", routeValues: null, htmlAttributes: new { id = "loginLink" })</li>
		}
		else
		{
			var user = (Services.Models.UserModel)HttpContext.Current.Session["currentUser"];
			<li class="dropdown"><label class="label-default dropdown-toggle" data-toggle="dropdown">@user.Username<span class="caret" /></label>
				<ul class="dropdown-menu">
					<li>@Html.ActionLink(Resources.ViewProfile, "GetProfileByUserID", "Profile", routeValues: new { userID = @user.ID }, htmlAttributes: new { id = "view_profile_link" })</li>
					<li>@Html.ActionLink(Resources.UpdateYourProfile, "UpdateProfile", "Profile", routeValues: null, htmlAttributes: new { id = "update_profile_link" })</li>
					<li>@Html.ActionLink(Resources.UpdateSettings, "Index", "Settings", routeValues: null, htmlAttributes: new { id = "setting_link" })</li>
				</ul>
			</li>
			<li>@Html.ActionLink(Resources.Logoff, "LogOff", "Home", routeValues: null, htmlAttributes: new { id = "logoff_link" })</li>
		}
	</ul>
}
