@model PagedList.IPagedList<WebMediaClient.Models.CommentViewModel>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<script type="text/javascript">
	window.addEventListener("load", function () { getTopic(); }, false);

	function getTopic() {
		$.ajax
		({
			url: '@Url.Action("GetTopicByIDRaw", "Topic", new { ID = @ViewBag.TopicID})',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.TopicType == "Section")
					getCommentRoot(data.SectionID);
			}
		})
	}

	function getCommentRoot(id) {
		var link = '@Url.Action("GetRoot", "Section", new { sectionID = -1 })';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				checkCommentMember(data.ID);
			},
		})
	}

	function checkCommentMember(id) {
		var link = '@Html.Raw(Url.Action("GetMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = -1 }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				var divs5 = document.getElementsByClassName("col-md-5");
				var divs3 = document.getElementsByClassName("col-md-3");
				var divs2 = document.getElementsByClassName("delete_buttons");
				var labels = document.getElementsByClassName("label-info");
				var primaries = document.getElementsByClassName("label-primary");
				for (i = 0; i < divs5.length; i++) {
					var div5 = divs5[i];
					var div3 = divs3[i];
					var div2 = divs2[i];
					var label = labels[i];
					var primary = primaries[i];
					var userID = parseInt(label.textContent);
					var commentID = parseInt(primary.textContent);
					var manageNode = document.createElement("li");
					manageNode.setAttribute("id", "account_options");
					manageNode.setAttribute("class", "dropdown");
					var actionLinkElement = document.createElement("label");
					actionLinkElement.setAttribute("class", "label-default dropdown-toggle");
					actionLinkElement.setAttribute("data-toggle", "dropdown");
					var manageElem = '@Resources.Options';
					actionLinkElement.innerHTML = manageElem;
					manageNode.appendChild(actionLinkElement);
					var dropdownMenu = document.createElement("ul");
					dropdownMenu.setAttribute("class", "dropdown-menu");
					if (data.Role == "Regular" || data.Role == "Admin" || data.Role == "Mod") {
						if (data.Role == "Regular") {
							var currentID = '@ViewBag.User.ID';
							if (userID == currentID) {
								var buttonEdit = document.createElement("button");
								var topicID = '@ViewBag.TopicID';
								buttonEdit.setAttribute("class", "btn btn-default");
								buttonEdit.setAttribute("onclick", "updateComment(\"" + commentID + "\", \"" + topicID + "\", \"" + userID + "\")");
								buttonEdit.innerHTML = '@Resources.Edit';
								div3.appendChild(buttonEdit);
							}
						}
						var getComments = document.createElement("li");
						var getCommentsLink = document.createElement("a");
						var linkComments = '@Html.ActionLink(Resources.ViewAllComments, "GetCommentsByAuthorIDAndSectionID", "Comment", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_comments_link" })';
						linkComments = linkComments.replace("-1", userID);
						linkComments = linkComments.replace("-2", id);
						getCommentsLink.innerHTML = linkComments;
						getComments.appendChild(getCommentsLink);
						dropdownMenu.appendChild(getComments);
						var getTopics = document.createElement("li");
						var getTopicsLink = document.createElement("a");
						var getTopicsElem = '@Html.ActionLink(Resources.ViewAllTopics, "GetTopicsByAuthorIDAndSectionID", "Topic", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_topics_link" })';
						getTopicsElem = getTopicsElem.replace("-1", userID);
						getTopicsElem = getTopicsElem.replace("-2", id);
						getTopicsLink.innerHTML = getTopicsElem;
						getTopics.appendChild(getTopicsLink);
						dropdownMenu.appendChild(getTopics);
						var getAllTopics = document.createElement("li");
						var getAllTopicsLink = document.createElement("a");
						var getAllTopicsElem = '@Html.ActionLink(Resources.AllTopics, "GetTopicsByAuthorID", "Topic", routeValues: new { authorID = -1 }, htmlAttributes: new { id = "get_all_topics_link" })';
						getAllTopicsElem = getAllTopicsElem.replace("-1", userID);
						getAllTopicsLink.innerHTML = getAllTopicsElem;
						getAllTopics.appendChild(getAllTopicsLink);
						dropdownMenu.appendChild(getAllTopics);
					}
					if (data.Role == "Admin" || data.Role == "Mod") {
						var suspendUser = document.createElement("li");
						var suspendUserLink = document.createElement("a");
						var suspendElem = '@Html.ActionLink(Resources.SuspendUser, "SuspendUser", "Settings", routeValues: new { userID = -1, sectionID = -2 }, htmlAttributes: new { id = "suspend_user_link" })';
						suspendElem = suspendElem.replace("-1", userID);
						suspendElem = suspendElem.replace("-2", id);
						suspendUserLink.innerHTML = suspendElem;
						suspendUser.appendChild(suspendUserLink);
						dropdownMenu.appendChild(suspendUser);
						var buttonEdit = document.createElement("button");
						var topicID = '@ViewBag.TopicID';
						buttonEdit.setAttribute("class", "btn btn-default");
						buttonEdit.setAttribute("onclick", "updateComment(\"" + commentID + "\", \"" + topicID + "\", \"" + userID + "\")");
						buttonEdit.innerHTML = '@Resources.Edit';
						div3.appendChild(buttonEdit);
						var buttonDelete = document.createElement("button");
						buttonDelete.setAttribute("class", "btn btn-default");
						buttonDelete.setAttribute("onclick", "deleteComment(\"" + commentID + "\")");
						buttonDelete.innerHTML = '@Resources.Delete';
						div2.appendChild(buttonDelete);
					}
					if (data.Role == "Admin") {
						var promoteUser = document.createElement("li");
						var promoteUserLink = document.createElement("a");
						var promoteElem = '@Html.ActionLink(Resources.ChangePosition, "ChangePosition", "Settings", routeValues: new { userID = -1, sectionID = -2 }, htmlAttributes: new { id = "change_position_link" })';
						promoteElem = promoteElem.replace("-1", userID);
						promoteElem = promoteElem.replace("-2", id);
						promoteUserLink.innerHTML = promoteElem;
						promoteUser.appendChild(promoteUserLink);
						dropdownMenu.appendChild(promoteUser);
					}
					manageNode.appendChild(actionLinkElement);
					manageNode.appendChild(dropdownMenu);
					div5.appendChild(manageNode);
					$(".dropdown-toggle").dropdown();
				}
			}
		})
	}

	function updateComment(id, topicID, userID) {
		var currentUserID = '@ViewBag.User.ID';
		if (userID != currentUserID)
			alert('@Resources.NonPermitedOperation');
		else {
			var link = '@Html.Raw(Url.Action("UpdateComment", "Comment", new { ID = -1, TopicID = -2 }))';
			link = link.replace("-1", id);
			link = link.replace("-2", topicID);
			window.location.href = link;
		}
	}

	function quoteComment(id) {
		var link = '@Url.Action("GetCommentByID", "Comment", new { ID = -1 })';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				CKEDITOR.instances.comment_text.setData(data.Text);
			},
		})
	}

	function deleteComment(id) {
		var link = '@Url.Action("DeleteComment", "Comment", new { ID = -1 })';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'DELETE',
			success: function (data) {
				alert('@Resources.SuccessfullyDeleted');
			},
		});
	}

	function rateCommentPositive(id) {
		var link = '@Html.Raw(Url.Action("UpdateRating", "Comment", new { commentID = -1, like = true }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'PUT',
			success: function (data) {

			},
		});
	}

	function rateCommentNegative(id) {
		var link = '@Html.Raw(Url.Action("UpdateRating", "Comment", new { commentID = -1, like = false }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'PUT',
			success: function (data) {

			},
		});
	}

	@*function updateControls(role, id) {
		var divs = document.getElementsByClassName("col-md-5");
		var labels = document.getElementsByClassName("label-info");
		for (i = 0; i < divs.length; i++) {
			var div = divs[i];
			var label = labels[i];
			var userID = parseInt(label.textContent);
			var manageNode = document.createElement("li");
			manageNode.setAttribute("id", "account_options");
			manageNode.setAttribute("class", "dropdown");
			var actionLinkElement = document.createElement("label");
			actionLinkElement.setAttribute("class", "label-default dropdown-toggle");
			actionLinkElement.setAttribute("data-toggle", "dropdown");
			var manageElem = "Options";
			actionLinkElement.innerHTML = manageElem;
			manageNode.appendChild(actionLinkElement);
			var dropdownMenu = document.createElement("ul");
			dropdownMenu.setAttribute("class", "dropdown-menu");
			if (role == "Regular" || role == "Admin" || role == "Mod") {
				var getComments = document.createElement("li");
				var getCommentsLink = document.createElement("a");
				var linkComments = '@Html.ActionLink("View all comments in this section", "GetCommentsByAuthorIDAndSectionID", "Comment", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_comments_link" })';
				linkComments = linkComments.replace("-1", userID);
				linkComments = linkComments.replace("-2", id);
				getCommentsLink.innerHTML = linkComments;
				getComments.appendChild(getCommentsLink);
				dropdownMenu.appendChild(getComments);
				var getTopics = document.createElement("li");
				var getTopicsLink = document.createElement("a");
				var getTopicsElem = '@Html.ActionLink("View all topics in this section", "GetTopicsByAuthorIDAndSectionID", "Topic", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_topics_link" })';
				getTopicsElem = getTopicsElem.replace("-1", userID);
				getTopicsElem = getTopicsElem.replace("-2", id);
				getTopicsLink.innerHTML = getTopicsElem;
				getTopics.appendChild(getTopicsLink);
				dropdownMenu.appendChild(getTopics);
				var getAllTopics = document.createElement("li");
				var getAllTopicsLink = document.createElement("a");
				var getAllTopicsElem = '@Html.ActionLink("View all topics", "GetTopicsByAuthorID", "Topic", routeValues: new { authorID = -1 }, htmlAttributes: new { id = "get_all_topics_link" })';
				getAllTopicsElem = getAllTopicsElem.replace("-1", userID);
				getAllTopicsLink.innerHTML = getAllTopicsElem;
				getAllTopics.appendChild(getAllTopicsLink);
				dropdownMenu.appendChild(getAllTopics);
			}
			if (role == "Admin" || role == "Mod") {
				var suspendUser = document.createElement("li");
				var suspendUserLink = document.createElement("a");
				var suspendElem = '@Html.ActionLink("Suspend user", "SuspendUser", "Settings", routeValues: new { userID = -1, sectionID = -2 }, htmlAttributes: new { id = "suspend_user_link" })';
				suspendElem = suspendElem.replace("-1", userID);
				suspendElem = suspendElem.replace("-2", id);
				suspendUserLink.innerHTML = suspendElem;
				suspendUser.appendChild(suspendUserLink);
				dropdownMenu.appendChild(suspendUser);
			}
			if (role == "Admin") {
				var promoteUser = document.createElement("li");
				var promoteUserLink = document.createElement("a");
				var promoteElem = '@Html.ActionLink("Change position", "ChangePosition", "Settings", routeValues: new { userID = -1, sectionID = -2 }, htmlAttributes: new { id = "change_position_link" })';
				promoteElem = promoteElem.replace("-1", userID);
				promoteElem = promoteElem.replace("-2", id);
				promoteUserLink.innerHTML = promoteElem;
				promoteUser.appendChild(promoteUserLink);
				dropdownMenu.appendChild(promoteUser);
			}
			manageNode.appendChild(actionLinkElement);
			manageNode.appendChild(dropdownMenu);
			div.appendChild(manageNode);
		}
	}*@
</script>

<script src="~/ckeditor/ckeditor.js"></script>

<div class="row">
	<div class="col-md-8">
		<div class="list-group">
			@foreach (var item in Model)
			{
				<div class="row" style="border-top: medium; border-left: medium; border-right: medium; border-bottom: medium">
					<div class="col-md-5">
						@if(!ViewBag.UserIDs.Contains(item.AuthorID))
						{
							@Html.Action("GetAuthorInfo", "User", new { userID = @item.AuthorID });
						}
						else
						{
							@Html.Action("GetAuthorInfo", "User", new { userID = @item.AuthorID, anonymous = true });
						}
						<label class="label-primary" hidden="hidden">@item.ID</label>
						<label class="label-info" hidden="hidden">@item.AuthorID</label>
					</div>
					<div class="col-md-4">
						@if(item.Name != null)
						{
							@Html.TextBoxFor(i => item.Name, new { @class = "form-control input-lg" })
						}
					</div>
					<div class="col-md-4">
						@Html.Raw(item.Text)
						<br />
						<div class="col-md-2" style="margin-right: 50px">
							<button class="btn btn-group" onclick="@("quoteComment(" + @Html.Raw(Json.Encode(item.ID)) + ")")">@Resources.Quote</button>
							@*<button class="btn btn-group" style="width: 5em; height: 2em" onclick="@("rateCommentPositive(" + @Html.Raw(Json.Encode(item.ID)) + ")")">+</button>
							<button class="btn btn-group" style="width: 5em; height: 2em" onclick="@("rateCommentNegative(" + @Html.Raw(Json.Encode(item.ID)) + ")")">-</button>*@
						</div>
						<div class="col-md-3" style="margin-right: 50px">
						</div>
						<div class="delete_buttons">
						</div>
					</div>
				</div>
			}
		</div>
	</div>
</div>
<div class="row">
	<label id="ip_text" class="label-default">@ViewBag.IP</label>
</div>
<div class="row">
	Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

	@Html.PagedListPager(Model, page => Url.Action("GetTopicByID", "Topic",
	new { ID = @ViewBag.TopicID, page }))
</div>


