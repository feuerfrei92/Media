@model List<WebMediaClient.Models.CommentViewModel>

<script type="text/javascript">
	window.addEventListener("load", function () { setIDs(); }, false);

	function setIDs() {
		var textAreas = document.getElementsByTagName("textarea");
		for (i = 0; i < textAreas.length; i++) {
			var textArea = textAreas[i];
			if (textArea.id != "comment_text") {
				textArea.setAttribute("id", "textarea" + "_" + i.toString());
				CKEDITOR.replace("textarea" + "_" + i.toString(), { customConfig: "/Scripts/Myconfig.js", readOnly: true });
			}
		}
		getTopic();
	}

	function getTopic() {
		$.ajax
		({
			url: '@Url.Action("GetTopicByIDRaw", "Topic", new { ID = @ViewBag.TopicID})',
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				getRoot(data.SectionID);
			}
		})
	}

	function getRoot(id) {
		var link = '@Url.Action("GetRoot", "Section", new { sectionID = -1 })';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				checkMember(data.ID);
			},
		})
	}

	function checkMember(id) {
		var link = '@Html.Raw(Url.Action("GetMembership", "Section", new { userID = @ViewBag.User.ID, sectionID = -1 }))';
		link = link.replace("-1", id);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				if (data.Role == "Regular" || data.Role == "Admin" || data.Role == "Mod")
					updateControls(data.Role, id);
			}
		})
	}

	function updateControls(role, id) {
		var divs = document.getElementsByClassName("col-md-5");
		var labels = document.getElementsByClassName("label-info");
		for (i = 0; i < divs.length; i++) {
			var div = divs[i];
			var label = labels[i];
			var userID = label.innerHtml;
			var manageNode = document.createElement("li");
			manageNode.setAttribute("id", "account_options");
			manageNode.setAttribute("class", "dropdown");
			var actionLinkElement = document.createElement("label");
			actionLinkElement.setAttribute("class", "label-default dropdown-toggle");
			actionLinkElement.setAttribute("data-toggle", "dropdown");
			var manageElem = "Options";
			actionLinkElement.innerHTML = manageElem;
			manageNode.appendChild(actionLinkElement);
			var dropdownMenu = document.createElement("ul");
			dropdownMenu.setAttribute("class", "dropdown-menu");
			if (role == "Regular" || role == "Admin" || role == "Mod") {
				var getComments = document.createElement("li");
				var getCommentsLink = document.createElement("a");
				var linkComments = '@Html.ActionLink("View all comments in this section", "GetCommentsByAuthorIDAndSectionID", "Comment", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_comments_link" })';
				linkComments = linkComments.replace("-1", userID);
				linkComments = linkComments.replace("-2", id);
				getCommentsLink.innerHTML = linkComments;
				getComments.appendChild(getCommentsLink);
				dropdownMenu.appendChild(getComments);
				var getTopics = document.createElement("li");
				var getTopicsLink = document.createElement("a");
				var getTopicsElem = '@Html.ActionLink("View all topics in this section", "GetTopicsByAuthorIDAndSectionID", "Topic", routeValues: new { authorID = -1, sectionID = -2 }, htmlAttributes: new { id = "get_topics_link" })';
				getTopicsElem = getTopicsElem.replace("-1", userID);
				getTopicsElem = getTopicsElem.replace("-2", id);
				getTopicsLink.innerHTML = getTopicsElem;
				getTopics.appendChild(getTopicsLink);
				dropdownMenu.appendChild(getTopics);
				var getAllTopics = document.createElement("li");
				var getAllTopicsLink = document.createElement("a");
				var getAllTopicsElem = '@Html.ActionLink("View all topics", "GetTopicsByAuthorID", "Topic", routeValues: new { authorID = -1 }, htmlAttributes: new { id = "get_all_topics_link" })';
				getAllTopicsElem = getAllTopicsElem.replace("-1", userID);
				getAllTopicsLink.innerHTML = getAllTopicsElem;
				getAllTopics.appendChild(getAllTopicsLink);
				dropdownMenu.appendChild(getAllTopics);
			}
			if (role == "Admin" || role == "Mod") {
				var suspendUser = document.createElement("li");
				var suspendUserLink = document.createElement("a");
				var suspendElem = '@Html.ActionLink("Suspend user", "SuspendUser", "Settings", routeValues: new { userID = -1 }, htmlAttributes: new { id = "suspend_user_link" })';
				suspendElem = suspendElem.replace("-1", userID);
				suspendUserLink.innerHTML = suspendElem;
				suspendUser.appendChild(suspendUserLink);
				dropdownMenu.appendChild(suspendUser);
			}
			if (role == "Admin")
			{
				var promoteUser = document.createElement("li");
				var promoteUserLink = document.createElement("a");
				var promoteElem = '@Html.ActionLink("Change position", "ChangePosition", "Settings", routeValues: new { userID = -1 }, htmlAttributes: new { id = "change_position_link" })';
				promoteElem = promoteElem.replace("-1", userID);
				promoteUserLink.innerHTML = promoteElem;
				promoteUser.appendChild(promoteUserLink);
				dropdownMenu.appendChild(promoteUser);
			}
			manageNode.appendChild(actionLinkElement);
			manageNode.appendChild(dropdownMenu);
			div.appendChild(manageNode);
		}
	}
</script>

<script src="~/ckeditor/ckeditor.js"></script>

<div class="row">
	<div class="col-md-8">
		<div class="list-group">
			@foreach (var item in Model)
			{
				<div class="row">
					<div class="col-md-5">
						@Html.Action("GetUserByID", "User", new { ID = item.AuthorID });
						<label class="label-info" hidden="hidden">@item.AuthorID</label>
					</div>
					<div class="col-md-4">
						@if(item.Name != null)
						{
							@Html.TextBoxFor(i => item.Name, new { @class = "form-control" })
						}
					</div>
					<div class="col-md-4">
						@Html.TextAreaFor(i => item.Text, new { @class = "form-control", @rows = 5, @cols = 25 })
					</div>
				</div>
			}
		</div>
	</div>
</div>


