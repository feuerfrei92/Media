@model List<WebMediaClient.Models.ProfileViewModel>

@{
    ViewBag.Title = "DisplayProfileSearchResults";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Profile search results</h2>

<script type="text/javascript">
	window.addEventListener("load", function () { compareUsername() }, false);

	//function getToken() {
	//	if (Modernizr.localstorage) {
	//		var localProfile = window.localStorage;
	//		var token = JSON.parse(localProfile.getItem("MediaToken"));
	//		return token;
	//	}
	//}

	@*@*function getUsername() {
		var token = getToken();
		$.ajax
		({
			url: '@Url.Action("GetCurrentUser", "User")',
			data: { token: token },
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				var hiddenID = document.getElementById("hidden_ID");
				hiddenID.value = data.ID;
				var hiddenUsername = document.getElementById("hidden_label");
				hiddenUsername.value = data.Username;
				compareUsername();
			}
		})
	}*@

	function addButton(username) {
		var divID = "div_" + username;
		var profileList = document.getElementById(divID);
		var buttonFriend = document.createElement("button");
		buttonFriend.setAttribute("id", username);
		buttonFriend.setAttribute("class", "button");
		buttonFriend.setAttribute("onclick", "getFriendID(\"" + username + "\")");
		buttonFriend.innerHTML = "Add friend";
		profileList.appendChild(buttonFriend);
	}

	function compareUsername() {
		var user = @Html.Raw(Json.Encode(ViewBag.User));
		if (user != null) {
			var buttons = document.getElementsByClassName("button");
			var profileList = document.getElementsByClassName("add_friend");
			for (var i = 0; i < buttons.length; i++) {
				var item = buttons[i];
				var profile = profileList[i];
				if (item.id == user.Username || item.id == null)
					$(item).prop('disabled', true);
				else {
					var link = '@Url.Action("GetUserByUsername", "User", new { Username = "oooo" })';
					link = link.replace("oooo", item.id);
					$.ajax
					({
						url: link,
						dataType: 'json',
						type: 'GET',
						success: function (data) {
							//profileList.removeChild(item);
							checkIfFriend(data.ID, item);
						}
					})
				}
			}
		}
	}

	function checkIfFriend(id, button) {
		var user = @Html.Raw(Json.Encode(ViewBag.User));
		if (user != null) {
			var link = '@Html.Raw(Url.Action("GetFriendship", "Profile", new { userID = -1, friendID = -2 }))';
			link = link.replace("-1", user.ID);
			link = link.replace("-2", id);
			$.ajax
			({
				url: link,
				dataType: 'json',
				type: 'GET',
				success: function (data) {
					$(button).prop('disabled', true);
				}
			})
		}
	}

	function getFriendID(username) {
		var link = '@Url.Action("GetUserByUsername", "User", new { Username = "oooo" })';
		link = link.replace("oooo", username);
		$.ajax
		({
			url: link,
			dataType: 'json',
			type: 'GET',
			success: function (data) {
				var id = data.ID;
				addFriend(id);
			}
		})
	}

	function addFriend(id) {
		var user = @Html.Raw(Json.Encode(ViewBag.User));
		if (user != null)
		{
			var link = '@Html.Raw(@Url.Action("AddFriend", "Profile", new { UserID = -1, FriendID = -2 }))';
			link = link.replace("-1", user.ID);
			link = link.replace("-2", id);
			$.ajax
			({
				url: link,
				dataType: 'json',
				type: 'POST',
				success: function (data) {
					//var button = document.getElementById('button' + text2);
					//if(data.Response == "OK")
					//	button.value = "Request sent";
				}
			})
		}
	}
</script>

	<div class="row">
		<div class="col-md-8">
			<div class="list-group">
				@foreach (var item in Model)
				{
					<div class="list-group-item">
						@Html.ActionLink(item.Username, "GetProfileByID", "Profile", new { ID = item.ID }, null);
					</div>
						<div id="@string.Format("div_{0}", item.Username)" class="add_friend">
							<script type="text/javascript">
								var user = @Html.Raw(Json.Encode(ViewBag.User));
								if(user != null)
									addButton(@Html.Raw(Json.Encode(item.Username)));
							</script>
						</div>
				}
			</div>
		</div>
	</div>

